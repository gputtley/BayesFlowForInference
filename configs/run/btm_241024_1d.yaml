name: BTM_241024_1D
files:
  other: 
    inputs:
      - data/top_mc/st_2016_elec.root
      - data/top_mc/st_2017_elec.root
      - data/top_mc/st_2018_elec.root
      - data/top_mc/st_2016_muon.root
      - data/top_mc/st_2017_muon.root
      - data/top_mc/st_2018_muon.root
      - data/top_mc/wjets_2016_elec.root
      - data/top_mc/wjets_2017_elec.root
      - data/top_mc/wjets_2018_elec.root
      - data/top_mc/wjets_2016_muon.root
      - data/top_mc/wjets_2017_muon.root
      - data/top_mc/wjets_2018_muon.root
    tree_name: AnalysisTree
    selection: "((((sub1_px_rec + sub2_px_rec + sub3_px_rec)**2 + (sub1_pz_rec + sub2_pz_rec + sub3_pz_rec)**2)**0.5)>400) & ((sub1_px_rec**2 + sub1_pz_rec**2)>30) & ((sub2_px_rec**2 + sub2_pz_rec**2)>30) & ((sub3_px_rec**2 + sub3_pz_rec**2)>30) & ((passed_massmigration_rec==0) & (passed_btagmigration_rec==0) & (passed_leptonptmigration_rec==0) & (passed_ptmigration_rec==0) & (passed_subptmigration_rec==0))"
    weight: "gen_weight*rec_weight*sub1_factor_jer*sub2_factor_jer*sub3_factor_jer*sub1_factor_jec*sub2_factor_jec*sub3_factor_jec*sub1_factor_cor*sub2_factor_cor*sub3_factor_cor"
    scale: 1.0
    pre_calculate:
      sub123_E_rec: "sub1_E_rec + sub2_E_rec + sub3_E_rec"
      sub123_px_rec: "sub1_px_rec + sub2_px_rec + sub3_px_rec"
      sub123_py_rec: "sub1_py_rec + sub2_py_rec + sub3_py_rec"
      sub123_pz_rec: "sub1_pz_rec + sub2_pz_rec + sub3_pz_rec"
      b_px_rec: "((index_b==1)*(sub1_px_rec)) + ((index_b==2)*(sub2_px_rec)) + ((index_b==3)*(sub3_px_rec))"
      b_py_rec: "((index_b==1)*(sub1_py_rec)) + ((index_b==2)*(sub2_py_rec)) + ((index_b==3)*(sub3_py_rec))"
      b_pz_rec: "((index_b==1)*(sub1_pz_rec)) + ((index_b==2)*(sub2_pz_rec)) + ((index_b==3)*(sub3_pz_rec))"
      b_E_rec: "((index_b==1)*(sub1_E_rec)) + ((index_b==2)*(sub2_E_rec)) + ((index_b==3)*(sub3_E_rec))"
      w1_px_rec: "((index_b==1)*(sub2_px_rec)) + ((index_b==2)*(sub1_px_rec)) + ((index_b==3)*(sub1_px_rec))"
      w1_py_rec: "((index_b==1)*(sub2_py_rec)) + ((index_b==2)*(sub1_py_rec)) + ((index_b==3)*(sub1_py_rec))"
      w1_pz_rec: "((index_b==1)*(sub2_pz_rec)) + ((index_b==2)*(sub1_pz_rec)) + ((index_b==3)*(sub1_pz_rec))"
      w1_E_rec: "((index_b==1)*(sub2_E_rec)) + ((index_b==2)*(sub1_E_rec)) + ((index_b==3)*(sub1_E_rec))"
      w2_px_rec: "((index_b==1)*(sub3_px_rec)) + ((index_b==2)*(sub3_px_rec)) + ((index_b==3)*(sub2_px_rec))"
      w2_py_rec: "((index_b==1)*(sub3_py_rec)) + ((index_b==2)*(sub3_py_rec)) + ((index_b==3)*(sub2_py_rec))"
      w2_pz_rec: "((index_b==1)*(sub3_pz_rec)) + ((index_b==2)*(sub3_pz_rec)) + ((index_b==3)*(sub2_pz_rec))"
      w2_E_rec: "((index_b==1)*(sub3_E_rec)) + ((index_b==2)*(sub3_E_rec)) + ((index_b==3)*(sub2_E_rec))"
      w_px_rec: "w1_px_rec + w2_px_rec"
      w_py_rec: "w1_py_rec + w2_py_rec"
      w_pz_rec: "w1_pz_rec + w2_pz_rec"
      w_E_rec: "w1_E_rec + w2_E_rec"
      sub123_pt_rec: "(sub123_px_rec**2 + sub123_pz_rec**2)**0.5"
      sub123_mass_rec: "(sub123_E_rec**2 - sub123_px_rec**2 - sub123_py_rec**2 - sub123_pz_rec**2)**0.5"
      b_pt_rec: "(b_px_rec**2 + b_pz_rec**2)**0.5"
      w_pt_rec: "(w_px_rec**2 + w_pz_rec**2)**0.5"
      w_mass_rec: "(w_E_rec**2 - w_px_rec**2 - w_py_rec**2 - w_pz_rec**2)**0.5"
  ttbar: 
    inputs:
      - data/top_mc/ttbar_1665_2016_elec.root # 166.5
      - data/top_mc/ttbar_1665_2017_elec.root
      - data/top_mc/ttbar_1665_2018_elec.root
      - data/top_mc/ttbar_1665_2016_muon.root
      - data/top_mc/ttbar_1665_2017_muon.root
      - data/top_mc/ttbar_1665_2018_muon.root
      - data/top_mc/ttbar_1695_2016_elec.root # 169.5
      - data/top_mc/ttbar_1695_2017_elec.root
      - data/top_mc/ttbar_1695_2018_elec.root
      - data/top_mc/ttbar_1695_2016_muon.root
      - data/top_mc/ttbar_1695_2017_muon.root
      - data/top_mc/ttbar_1695_2018_muon.root
      - data/top_mc/ttbar_1715_2016_elec.root # 171.5
      - data/top_mc/ttbar_1715_2017_elec.root
      - data/top_mc/ttbar_1715_2018_elec.root
      - data/top_mc/ttbar_1715_2016_muon.root
      - data/top_mc/ttbar_1715_2017_muon.root
      - data/top_mc/ttbar_1715_2018_muon.root
      - data/top_mc/ttbar_2016_elec.root # 172.5
      - data/top_mc/ttbar_2017_elec.root
      - data/top_mc/ttbar_2018_elec.root
      - data/top_mc/ttbar_2016_muon.root
      - data/top_mc/ttbar_2017_muon.root
      - data/top_mc/ttbar_2018_muon.root
      - data/top_mc/ttbar_1735_2016_elec.root # 173.5
      - data/top_mc/ttbar_1735_2017_elec.root
      - data/top_mc/ttbar_1735_2018_elec.root
      - data/top_mc/ttbar_1735_2016_muon.root
      - data/top_mc/ttbar_1735_2017_muon.root
      - data/top_mc/ttbar_1735_2018_muon.root
      - data/top_mc/ttbar_1755_2016_elec.root # 175.5
      - data/top_mc/ttbar_1755_2017_elec.root
      - data/top_mc/ttbar_1755_2018_elec.root
      - data/top_mc/ttbar_1755_2016_muon.root
      - data/top_mc/ttbar_1755_2017_muon.root
      - data/top_mc/ttbar_1755_2018_muon.root
      - data/top_mc/ttbar_1785_2016_elec.root # 178.5
      - data/top_mc/ttbar_1785_2017_elec.root
      - data/top_mc/ttbar_1785_2018_elec.root
      - data/top_mc/ttbar_1785_2016_muon.root
      - data/top_mc/ttbar_1785_2017_muon.root
      - data/top_mc/ttbar_1785_2018_muon.root
    add_columns:
      mass: 
        - 166.5 # 166.5
        - 166.5
        - 166.5
        - 166.5
        - 166.5
        - 166.5
        - 169.5 # 169.5
        - 169.5
        - 169.5
        - 169.5
        - 169.5
        - 169.5
        - 171.5 # 171.5
        - 171.5
        - 171.5
        - 171.5
        - 171.5
        - 171.5
        - 172.5 # 172.5
        - 172.5
        - 172.5
        - 172.5
        - 172.5
        - 172.5
        - 173.5 # 173.5
        - 173.5
        - 173.5
        - 173.5
        - 173.5
        - 173.5
        - 175.5 # 175.5
        - 175.5
        - 175.5
        - 175.5
        - 175.5
        - 175.5
        - 178.5 # 178.5
        - 178.5
        - 178.5
        - 178.5
        - 178.5
        - 178.5
    tree_name: AnalysisTree
    selection: "((((sub1_px_rec + sub2_px_rec + sub3_px_rec)**2 + (sub1_pz_rec + sub2_pz_rec + sub3_pz_rec)**2)**0.5)>400) & ((sub1_px_rec**2 + sub1_pz_rec**2)>30) & ((sub2_px_rec**2 + sub2_pz_rec**2)>30) & ((sub3_px_rec**2 + sub3_pz_rec**2)>30) & ((passed_massmigration_rec==0) & (passed_btagmigration_rec==0) & (passed_leptonptmigration_rec==0) & (passed_ptmigration_rec==0) & (passed_subptmigration_rec==0) & (passed_measurement_rec==1))"
    weight: "gen_weight*rec_weight*sub1_factor_jer*sub2_factor_jer*sub3_factor_jer*sub1_factor_jec*sub2_factor_jec*sub3_factor_jec*sub1_factor_cor*sub2_factor_cor*sub3_factor_cor"
    scale: 1.0
    pre_calculate:
      sub123_E_rec: "sub1_E_rec + sub2_E_rec + sub3_E_rec"
      sub123_px_rec: "sub1_px_rec + sub2_px_rec + sub3_px_rec"
      sub123_py_rec: "sub1_py_rec + sub2_py_rec + sub3_py_rec"
      sub123_pz_rec: "sub1_pz_rec + sub2_pz_rec + sub3_pz_rec"
      b_px_rec: "((index_b==1)*(sub1_px_rec)) + ((index_b==2)*(sub2_px_rec)) + ((index_b==3)*(sub3_px_rec))"
      b_py_rec: "((index_b==1)*(sub1_py_rec)) + ((index_b==2)*(sub2_py_rec)) + ((index_b==3)*(sub3_py_rec))"
      b_pz_rec: "((index_b==1)*(sub1_pz_rec)) + ((index_b==2)*(sub2_pz_rec)) + ((index_b==3)*(sub3_pz_rec))"
      b_E_rec: "((index_b==1)*(sub1_E_rec)) + ((index_b==2)*(sub2_E_rec)) + ((index_b==3)*(sub3_E_rec))"
      w1_px_rec: "((index_b==1)*(sub2_px_rec)) + ((index_b==2)*(sub1_px_rec)) + ((index_b==3)*(sub1_px_rec))"
      w1_py_rec: "((index_b==1)*(sub2_py_rec)) + ((index_b==2)*(sub1_py_rec)) + ((index_b==3)*(sub1_py_rec))"
      w1_pz_rec: "((index_b==1)*(sub2_pz_rec)) + ((index_b==2)*(sub1_pz_rec)) + ((index_b==3)*(sub1_pz_rec))"
      w1_E_rec: "((index_b==1)*(sub2_E_rec)) + ((index_b==2)*(sub1_E_rec)) + ((index_b==3)*(sub1_E_rec))"
      w2_px_rec: "((index_b==1)*(sub3_px_rec)) + ((index_b==2)*(sub3_px_rec)) + ((index_b==3)*(sub2_px_rec))"
      w2_py_rec: "((index_b==1)*(sub3_py_rec)) + ((index_b==2)*(sub3_py_rec)) + ((index_b==3)*(sub2_py_rec))"
      w2_pz_rec: "((index_b==1)*(sub3_pz_rec)) + ((index_b==2)*(sub3_pz_rec)) + ((index_b==3)*(sub2_pz_rec))"
      w2_E_rec: "((index_b==1)*(sub3_E_rec)) + ((index_b==2)*(sub3_E_rec)) + ((index_b==3)*(sub2_E_rec))"
      w_px_rec: "w1_px_rec + w2_px_rec"
      w_py_rec: "w1_py_rec + w2_py_rec"
      w_pz_rec: "w1_pz_rec + w2_pz_rec"
      w_E_rec: "w1_E_rec + w2_E_rec"
      sub123_pt_rec: "(sub123_px_rec**2 + sub123_pz_rec**2)**0.5"
      sub123_mass_rec: "(sub123_E_rec**2 - sub123_px_rec**2 - sub123_py_rec**2 - sub123_pz_rec**2)**0.5"
      b_pt_rec: "(b_px_rec**2 + b_pz_rec**2)**0.5"
      w_pt_rec: "(w_px_rec**2 + w_pz_rec**2)**0.5"
      w_mass_rec: "(w_E_rec**2 - w_px_rec**2 - w_py_rec**2 - w_pz_rec**2)**0.5"
variables:
  - sub123_mass_rec
pois:
  - mass
nuisances: []
preprocess:
  train_test_val_split: 0.8:0.1:0.1
  train_test_y_vals:
    mass:
    - 166.5
    - 169.5
    - 171.5
    - 172.5
    - 173.5
    - 175.5
    - 178.5
  validation_y_vals:
    mass:
    - 171.5
    - 172.5
    - 173.5
inference: {}
validation: {}
data_file: ~
